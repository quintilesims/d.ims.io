// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/quintilesims/d.ims.io/auth (interfaces: AccountManager)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAccountManager is a mock of AccountManager interface
type MockAccountManager struct {
	ctrl     *gomock.Controller
	recorder *MockAccountManagerMockRecorder
}

// MockAccountManagerMockRecorder is the mock recorder for MockAccountManager
type MockAccountManagerMockRecorder struct {
	mock *MockAccountManager
}

// NewMockAccountManager creates a new mock instance
func NewMockAccountManager(ctrl *gomock.Controller) *MockAccountManager {
	mock := &MockAccountManager{ctrl: ctrl}
	mock.recorder = &MockAccountManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAccountManager) EXPECT() *MockAccountManagerMockRecorder {
	return m.recorder
}

// Accounts mocks base method
func (m *MockAccountManager) Accounts() ([]string, error) {
	ret := m.ctrl.Call(m, "Accounts")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Accounts indicates an expected call of Accounts
func (mr *MockAccountManagerMockRecorder) Accounts() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Accounts", reflect.TypeOf((*MockAccountManager)(nil).Accounts))
}

// GrantAccess mocks base method
func (m *MockAccountManager) GrantAccess(arg0 string) error {
	ret := m.ctrl.Call(m, "GrantAccess", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// GrantAccess indicates an expected call of GrantAccess
func (mr *MockAccountManagerMockRecorder) GrantAccess(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GrantAccess", reflect.TypeOf((*MockAccountManager)(nil).GrantAccess), arg0)
}

// RevokeAccess mocks base method
func (m *MockAccountManager) RevokeAccess(arg0 string) error {
	ret := m.ctrl.Call(m, "RevokeAccess", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RevokeAccess indicates an expected call of RevokeAccess
func (mr *MockAccountManagerMockRecorder) RevokeAccess(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RevokeAccess", reflect.TypeOf((*MockAccountManager)(nil).RevokeAccess), arg0)
}
