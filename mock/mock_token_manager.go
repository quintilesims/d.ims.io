// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/quintilesims/d.ims.io/auth (interfaces: TokenManager)

package mock

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of TokenManager interface
type MockTokenManager struct {
	ctrl     *gomock.Controller
	recorder *_MockTokenManagerRecorder
}

// Recorder for MockTokenManager (not exported)
type _MockTokenManagerRecorder struct {
	mock *MockTokenManager
}

func NewMockTokenManager(ctrl *gomock.Controller) *MockTokenManager {
	mock := &MockTokenManager{ctrl: ctrl}
	mock.recorder = &_MockTokenManagerRecorder{mock}
	return mock
}

func (_m *MockTokenManager) EXPECT() *_MockTokenManagerRecorder {
	return _m.recorder
}

func (_m *MockTokenManager) CreateToken(_param0 string) (string, error) {
	ret := _m.ctrl.Call(_m, "CreateToken", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTokenManagerRecorder) CreateToken(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateToken", arg0)
}

func (_m *MockTokenManager) DeleteToken(_param0 string) error {
	ret := _m.ctrl.Call(_m, "DeleteToken", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTokenManagerRecorder) DeleteToken(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteToken", arg0)
}
