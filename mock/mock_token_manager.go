// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/quintilesims/d.ims.io/auth (interfaces: TokenManager)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenManager is a mock of TokenManager interface
type MockTokenManager struct {
	ctrl     *gomock.Controller
	recorder *MockTokenManagerMockRecorder
}

// MockTokenManagerMockRecorder is the mock recorder for MockTokenManager
type MockTokenManagerMockRecorder struct {
	mock *MockTokenManager
}

// NewMockTokenManager creates a new mock instance
func NewMockTokenManager(ctrl *gomock.Controller) *MockTokenManager {
	mock := &MockTokenManager{ctrl: ctrl}
	mock.recorder = &MockTokenManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTokenManager) EXPECT() *MockTokenManagerMockRecorder {
	return m.recorder
}

// CreateToken mocks base method
func (m *MockTokenManager) CreateToken(arg0 string) (string, error) {
	ret := m.ctrl.Call(m, "CreateToken", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateToken indicates an expected call of CreateToken
func (mr *MockTokenManagerMockRecorder) CreateToken(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToken", reflect.TypeOf((*MockTokenManager)(nil).CreateToken), arg0)
}

// DeleteToken mocks base method
func (m *MockTokenManager) DeleteToken(arg0 string) error {
	ret := m.ctrl.Call(m, "DeleteToken", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteToken indicates an expected call of DeleteToken
func (mr *MockTokenManagerMockRecorder) DeleteToken(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteToken", reflect.TypeOf((*MockTokenManager)(nil).DeleteToken), arg0)
}
