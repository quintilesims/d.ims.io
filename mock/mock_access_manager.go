// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/quintilesims/d.ims.io/auth (interfaces: AccessManager)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAccessManager is a mock of AccessManager interface
type MockAccessManager struct {
	ctrl     *gomock.Controller
	recorder *MockAccessManagerMockRecorder
}

// MockAccessManagerMockRecorder is the mock recorder for MockAccessManager
type MockAccessManagerMockRecorder struct {
	mock *MockAccessManager
}

// NewMockAccessManager creates a new mock instance
func NewMockAccessManager(ctrl *gomock.Controller) *MockAccessManager {
	mock := &MockAccessManager{ctrl: ctrl}
	mock.recorder = &MockAccessManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAccessManager) EXPECT() *MockAccessManagerMockRecorder {
	return m.recorder
}

// Accounts mocks base method
func (m *MockAccessManager) Accounts() ([]string, error) {
	ret := m.ctrl.Call(m, "Accounts")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Accounts indicates an expected call of Accounts
func (mr *MockAccessManagerMockRecorder) Accounts() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Accounts", reflect.TypeOf((*MockAccessManager)(nil).Accounts))
}

// GrantAccess mocks base method
func (m *MockAccessManager) GrantAccess(arg0 string) error {
	ret := m.ctrl.Call(m, "GrantAccess", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// GrantAccess indicates an expected call of GrantAccess
func (mr *MockAccessManagerMockRecorder) GrantAccess(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GrantAccess", reflect.TypeOf((*MockAccessManager)(nil).GrantAccess), arg0)
}

// RevokeAccess mocks base method
func (m *MockAccessManager) RevokeAccess(arg0 string) error {
	ret := m.ctrl.Call(m, "RevokeAccess", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RevokeAccess indicates an expected call of RevokeAccess
func (mr *MockAccessManagerMockRecorder) RevokeAccess(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RevokeAccess", reflect.TypeOf((*MockAccessManager)(nil).RevokeAccess), arg0)
}
